[{"path":[]},{"path":"http://humus.rocks/NASIStools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"http://humus.rocks/NASIStools/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"http://humus.rocks/NASIStools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Andrew G. Brown. Maintainer.","code":""},{"path":"http://humus.rocks/NASIStools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Brown, . (2022). NASIStools: Tools USDA-NRCS National Soil Information System (NASIS). R package version 0.0.0.9008. <https://ncss-tech.github.io/NASIStools>","code":"@Misc{,   title = {NASIStools},   author = {Andrew Brown},   url = {https://ncss-tech.github.io/NASIStools}, }"},{"path":"http://humus.rocks/NASIStools/index.html","id":"nasistools","dir":"","previous_headings":"","what":"Tools for the USDA-NRCS National Soil Information System (NASIS)","title":"Tools for the USDA-NRCS National Soil Information System (NASIS)","text":"goal NASIStools provide methods managing NASIS data, SSURGO exports, official metadata well provide ports legacy code (MS Access Macros) open source alternatives. Use cases primarily relate data model development, QA/QC provisional data inspection published products. part broader goal compartmentalize low-level procedures relevant internal (USDA) usage. Isolating lesser-used, specific functions allows comprehensive testing opportunities focus development soilDB package.","code":""},{"path":"http://humus.rocks/NASIStools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for the USDA-NRCS National Soil Information System (NASIS)","text":"Install package GitHub:","code":"# get dependencies install.packages(c('remotes', 'data.table', 'DBI', 'RSQLite', 'soilDB'))  # get package using remotes remotes::install_github(\"brownag/NASIStools\", dependencies=FALSE)"},{"path":"http://humus.rocks/NASIStools/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for the USDA-NRCS National Soil Information System (NASIS)","text":"query “reasons” particular interpretation mrulename rating records stored SSURGO SQLite database derived custom NASIS export.","code":"library(NASIStools)  # create a SQLite file database based on the .txt files contained in a SSURGO export createSSURGO(\"C:/path/to/ssurgo/tabular\", \"ssurgo.sqlite\")  # specify a rule name mrulename <-  \"FOR - Mechanical Site Preparation (Surface)\"  # create a DBIConnection to the SQLite database dsn <- DBI::dbConnect(RSQLite::SQLite(), \"ssurgo.sqlite\")  # perform a query with NASIStools result <- get_SSURGO_interp_reasons_by_mrulename(dsn, mrulename) library(soilDB) library(data.table)  mrulename <-  \"WMS - Pond Reservoir Area\"   # \"new\" tabular data from a local export result <- get_SSURGO_interp_reasons_by_mrulename(dsn, mrulename)  # \"old\" tabular data queried from SDA result_ssurgo <- get_SDA_interpretation(mrulename,                                         method = \"NONE\",                                         areasymbols = c(\"CA630\",\"CA649\"))                                          # assemble tables of mukey, compname, rating/class and reason x1 <- data.table(mukey = result$mukey,                  compname = result$compname,                  rating_new = result$interphr,                  rating_class = result$interphrc,                  rating_new_reason = result$Reason)  x2 <- data.table(mukey = result_ssurgo$mukey,                  compname = result_ssurgo$compname,                  rating_old = result_ssurgo$rating,                  rating_class = result_ssurgo$class,                  rating_old_reason = result$reason_WMSPondReservoirArea)  combined_result <- x2[x1, on = c(\"mukey\",\"compname\")]  combined_result$CHECK <- round(combined_result$rating_new, 2) == round(combined_result$rating_old, 2)"},{"path":"http://humus.rocks/NASIStools/reference/NASIStools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"NASIStools: Tools for the USDA-NRCS National Soil Information System (NASIS) — NASIStools-package","title":"NASIStools: Tools for the USDA-NRCS National Soil Information System (NASIS) — NASIStools-package","text":"goal NASIStools provide methods managing NASIS data, SSURGO exports, official metadata well provide ports legacy code (MS Access Macros) open source alternatives. Use cases primarily relate data model development, QA/QC provisional data inspection published products. part broader goal compartmentalize low-level procedures relevant internal (USDA) usage. Isolating lesser-used, specific functions allows comprehensive testing opportunities focus development soilDB package.","code":""},{"path":"http://humus.rocks/NASIStools/reference/NASIStools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NASIStools: Tools for the USDA-NRCS National Soil Information System (NASIS) — NASIStools-package","text":"Maintainer: Andrew Brown andrew.g.brown@usda.gov contributors: Soil Plant Science Division Staff USDA-NRCS [contributor]","code":""},{"path":"http://humus.rocks/NASIStools/reference/SSURGO-export-Interpretations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get SSURGO Component Interpretations summaries — get_SSURGO_cointerp","title":"Get SSURGO Component Interpretations summaries — get_SSURGO_cointerp","text":"Get SSURGO Component Interpretations summaries","code":""},{"path":"http://humus.rocks/NASIStools/reference/SSURGO-export-Interpretations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get SSURGO Component Interpretations summaries — get_SSURGO_cointerp","text":"","code":"get_SSURGO_cointerp(   dsn,   drv = RSQLite::SQLite(),   columns = c(\"mapunit.mukey\", \"mapunit.musym\", \"component.cokey\", \"cointerp.*\"),   mrulename = NULL,   ruledepth = 0,   close = TRUE )  get_SSURGO_component_keys(   dsn,   drv = RSQLite::SQLite(),   mrulename = NULL,   ruledepth = 0,   close = TRUE )"},{"path":"http://humus.rocks/NASIStools/reference/SSURGO-export-Interpretations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get SSURGO Component Interpretations summaries — get_SSURGO_cointerp","text":"dsn DBIConnection drv DBI driver (Default: RSQLite::SQLite()) columns Default: \"legend.lmapunitiid\", \"component.coiid\", \"cointerp.mrulekey\", \"cointerp.seqnum\", \"legend.musym\" mrulename Filter rule name(s) interpretation ruledepth Filter rule depth (default ruledepth = 0) close close connections opened internally done? Default: TRUE","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_PedonPC_NASIS_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a NASIS Flat File for importing Pedon Records — create_PedonPC_NASIS_import","title":"Create a NASIS Flat File for importing Pedon Records — create_PedonPC_NASIS_import","text":"Create NASIS Flat File importing Pedon Records","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_PedonPC_NASIS_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a NASIS Flat File for importing Pedon Records — create_PedonPC_NASIS_import","text":"","code":"create_PedonPC_NASIS_import(   tables = NULL,   filename,   dsn = NULL,   overwrite = FALSE )"},{"path":"http://humus.rocks/NASIStools/reference/create_PedonPC_NASIS_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a NASIS Flat File for importing Pedon Records — create_PedonPC_NASIS_import","text":"tables default NULL creates empty template; alternately list containing data.frames target table names new data write file. filename path output file containing templates importing table associated NASIS Pedon object dsn optional path SQLite Database open DBIConnection database containing NASIS pedon tables (yet implemented) overwrite default FALSE prevents overwriting filename exists","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_PedonPC_NASIS_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a NASIS Flat File for importing Pedon Records — create_PedonPC_NASIS_import","text":"character vector (invisibly) containing lines/content written filename","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_PedonPC_NASIS_import.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a NASIS Flat File for importing Pedon Records — create_PedonPC_NASIS_import","text":"Jay Skovlin, Andrew G. Brown","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_import_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Create NASIS XLSX Import Files — create_import_template","title":"Create NASIS XLSX Import Files — create_import_template","text":"Create NASIS XLSX Import Files","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_import_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create NASIS XLSX Import Files — create_import_template","text":"","code":"create_import_template(   .data,   file,   template_name,   columns,   sheet,   template_version = \"1.0\",   delimeter = \"<delimiter|||>\" )  create_import_template_from_mapping(   .data = NULL,   coltype = c(\"logical\", \"physical\"),   file,   template_name,   sheet,   ... )"},{"path":"http://humus.rocks/NASIStools/reference/create_import_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create NASIS XLSX Import Files — create_import_template","text":".data Optional: data.frame containing NASIS column physical logical names used populate template. Default empty template. file output file name template_name template name columns columns template sheet XLSX sheet name template_version template version; default: \"1.0\" delimeter used internally creating matrix representation writing file. Default: \"<delimiter|||>\" coltype Either \"physical\" physical column names, \"logical\" (default) logical column names (default worksheet import maps). ... Additional arguments passed create_import_template()","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_import_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create NASIS XLSX Import Files — create_import_template","text":"writes XLSX CSV file","code":""},{"path":"http://humus.rocks/NASIStools/reference/create_import_template.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create NASIS XLSX Import Files — create_import_template","text":"Column names containing \"_\" converted \" \"","code":""},{"path":"http://humus.rocks/NASIStools/reference/ecosite-import.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Ecosite / Ecosite Note XLSX NASIS Import Files — create_ESD_ecosites_import","title":"Create Ecosite / Ecosite Note XLSX NASIS Import Files — create_ESD_ecosites_import","text":"Create Ecosite / Ecosite Note XLSX NASIS Import Files","code":""},{"path":"http://humus.rocks/NASIStools/reference/ecosite-import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Ecosite / Ecosite Note XLSX NASIS Import Files — create_ESD_ecosites_import","text":"","code":"create_ESD_ecosites_import(file, coiids, ecositeids)  create_ESD_notes_import(file, coiids, author, notes)  create_note_from_ESD_ecosites(file, template, ..., sheet = \"ESDList\")"},{"path":"http://humus.rocks/NASIStools/reference/ecosite-import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Ecosite / Ecosite Note XLSX NASIS Import Files — create_ESD_ecosites_import","text":"file output file name (either .XLSX .CSV) coiids vector component IDs ecositeids vector ecological site IDs author author note notes note content template sprintf()-style format string 8192 bytes length ... values passed template. logical, integer, real character vectors supported. sheet Default XLSX sheet name \"ESDList\"","code":""},{"path":"http://humus.rocks/NASIStools/reference/ecosite-import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Ecosite / Ecosite Note XLSX NASIS Import Files — create_ESD_ecosites_import","text":"writes XLSX CSV file","code":""},{"path":"http://humus.rocks/NASIStools/reference/ecosite-import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Ecosite / Ecosite Note XLSX NASIS Import Files — create_ESD_ecosites_import","text":"","code":"library(soilDB)  create_ESD_ecosites_import(\"test_esd.xlsx\", 2770865, \"F018XI205CA\") #> Loading required namespace: openxlsx  if (soilDB::local_NASIS_defined()) {   esdnotes <- create_note_from_ESD_ecosites(\"test_esd.xlsx\", \"Assigned %s %s\")$note    esdnotes    create_ESD_notes_import(\"test_esd_note.xlsx\",                           coiids = 2770865,                           author = \"Andrew Brown\",                           notes = esdnotes)   unlink('test_esd_note.xlsx') } unlink('test_esd.xlsx')"},{"path":"http://humus.rocks/NASIStools/reference/ecositeid_to_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Ecological Site ID to Ecological Site Name using NASIS — ecositeid_to_name","title":"Convert Ecological Site ID to Ecological Site Name using NASIS — ecositeid_to_name","text":"Convert Ecological Site ID Ecological Site Name using NASIS","code":""},{"path":"http://humus.rocks/NASIStools/reference/ecositeid_to_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Ecological Site ID to Ecological Site Name using NASIS — ecositeid_to_name","text":"","code":"ecositeid_to_name(x)"},{"path":"http://humus.rocks/NASIStools/reference/ecositeid_to_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Ecological Site ID to Ecological Site Name using NASIS — ecositeid_to_name","text":"x character vector Ecological Site IDs","code":""},{"path":"http://humus.rocks/NASIStools/reference/ecositeid_to_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Ecological Site ID to Ecological Site Name using NASIS — ecositeid_to_name","text":"Uses contents local NASIS ecologicalsite table","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_SSURGO_interp_reasons_by_mrulename.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Interpretation Rating ","title":"Get Interpretation Rating ","text":"Get Interpretation Rating \"Reasons\" SSURGO cointerp table","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_SSURGO_interp_reasons_by_mrulename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Interpretation Rating ","text":"","code":"get_SSURGO_interp_reasons_by_mrulename(   dsn,   drv = RSQLite::SQLite(),   mrulename,   n = 2,   close = TRUE )"},{"path":"http://humus.rocks/NASIStools/reference/get_SSURGO_interp_reasons_by_mrulename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Interpretation Rating ","text":"dsn DBIConnection drv DBI driver (Default: RSQLite::SQLite()) mrulename Rule name interpretation n Number reasons return close close connections opened internally done? Default: TRUE","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_SSURGO_interp_reasons_by_mrulename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Interpretation Rating ","text":"data.frame containing columns: \"lmapunitiid\", \"coiid\", \"mrulename\", \"cokeyref\", \"Reasons\", \"liid\", \"muiid\", \"corriid\", \"dmuiid\", \"areasymbol\", \"musym\", \"compname\", \"comppct_r\", \"interphr\", \"interphrc\",\"mukey\"","code":""},{"path":[]},{"path":"http://humus.rocks/NASIStools/reference/get_correlation_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Correlated Mapunit and Component Information — get_correlation_info","title":"Get Correlated Mapunit and Component Information — get_correlation_info","text":"Get correlated mapunit status vector IDs. IDs area, legend, legendmapunit, mapunit correlation, data mapunit, component, component ecological site ecological site.","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_correlation_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Correlated Mapunit and Component Information — get_correlation_info","text":"","code":"get_correlation_info(x = NULL, x.col = \"dmuiid\", additional = FALSE)"},{"path":"http://humus.rocks/NASIStools/reference/get_correlation_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Correlated Mapunit and Component Information — get_correlation_info","text":"x vector record IDs (Default NULL entire local database) x.col physical column name containing record IDs (e.g. liid, muiid, dmuiid, coiid, ecositeiid). Default \"dmuiid\" additional include additional mapunits? Default FALSE","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_correlation_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Correlated Mapunit and Component Information — get_correlation_info","text":"data.frame containing component-level information IDs parent tables legend. Results contain component information related mapunits.","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_lmapunit_by_areasymbol.html","id":null,"dir":"Reference","previous_headings":"","what":"get_lmapunit_by_areasymbol — get_lmapunit_by_areasymbol","title":"get_lmapunit_by_areasymbol — get_lmapunit_by_areasymbol","text":"get_lmapunit_by_areasymbol","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_lmapunit_by_areasymbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_lmapunit_by_areasymbol — get_lmapunit_by_areasymbol","text":"","code":"get_lmapunit_by_areasymbol(areasymbol, dsn = soilDB::NASIS())"},{"path":"http://humus.rocks/NASIStools/reference/get_lmapunit_by_areasymbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_lmapunit_by_areasymbol — get_lmapunit_by_areasymbol","text":"areasymbol vector areasymbols dsn data source name, default soilDB::NASIS() OdbcConnection","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_lmapunit_by_areasymbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_lmapunit_by_areasymbol — get_lmapunit_by_areasymbol","text":"data.frame result","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_projectmapunits_by_uprojectid.html","id":null,"dir":"Reference","previous_headings":"","what":"get_projectmapunits_by_uprojectid — get_projectmapunits_by_uprojectid","title":"get_projectmapunits_by_uprojectid — get_projectmapunits_by_uprojectid","text":"get_projectmapunits_by_uprojectid","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_projectmapunits_by_uprojectid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_projectmapunits_by_uprojectid — get_projectmapunits_by_uprojectid","text":"","code":"get_projectmapunits_by_uprojectid(   uprojectid,   areasymbol = NULL,   dsn = soilDB::NASIS() )"},{"path":"http://humus.rocks/NASIStools/reference/get_projectmapunits_by_uprojectid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_projectmapunits_by_uprojectid — get_projectmapunits_by_uprojectid","text":"uprojectid vector user project IDs areasymbol Soil Survey Legend areasymbol include clause; Default: NULL constraint areasymbol dsn data source name, default soilDB::NASIS() OdbcConnection","code":""},{"path":"http://humus.rocks/NASIStools/reference/get_projectmapunits_by_uprojectid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_projectmapunits_by_uprojectid — get_projectmapunits_by_uprojectid","text":"data.frame result","code":""},{"path":"http://humus.rocks/NASIStools/reference/lookupTexture.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Soil Texture Abbreviation Codes or Names — lookupTexture","title":"Lookup Soil Texture Abbreviation Codes or Names — lookupTexture","text":"Lookup Soil Texture Abbreviation Codes Names","code":""},{"path":"http://humus.rocks/NASIStools/reference/lookupTexture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup Soil Texture Abbreviation Codes or Names — lookupTexture","text":"","code":"lookupTexture(x, what = \"names\", dsn = NULL)  lookupTextureModifier(x, what = \"names\", dsn = NULL)"},{"path":"http://humus.rocks/NASIStools/reference/lookupTexture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup Soil Texture Abbreviation Codes or Names — lookupTexture","text":"x vector soil texture/texture modifier abbreviation codes names either \"names\" (default) \"codes\". opposite x . dsn passed get_NASIS_metadata()","code":""},{"path":"http://humus.rocks/NASIStools/reference/lookupTexture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup Soil Texture Abbreviation Codes or Names — lookupTexture","text":"vector soil texture abbreviation codes names depending whether input values matched lookup table value . Unmatched values x return NA.","code":""},{"path":"http://humus.rocks/NASIStools/reference/lookupTexture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup Soil Texture Abbreviation Codes or Names — lookupTexture","text":"","code":"x <- lookupTexture(c(\"loam\", \"bar\", \"sandy loam\"), what = \"codes\") x #> [1] \"l\"  NA   \"sl\" lookupTexture(x, what = \"names\") #> [1] \"Loam\"       NA           \"Sandy loam\"  lookupTextureModifier(\"extremely bouldery\") #> [1] NA"},{"path":"http://humus.rocks/NASIStools/reference/read_import_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Worksheet Import Mapping XML\n\nReads a worksheet import map, identifies physical column names and associated columns for worksheets. — read_import_mapping","title":"Read Worksheet Import Mapping XML\n\nReads a worksheet import map, identifies physical column names and associated columns for worksheets. — read_import_mapping","text":"Read Worksheet Import Mapping XML Reads worksheet import map, identifies physical column names associated columns worksheets.","code":""},{"path":"http://humus.rocks/NASIStools/reference/read_import_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Worksheet Import Mapping XML\n\nReads a worksheet import map, identifies physical column names and associated columns for worksheets. — read_import_mapping","text":"","code":"read_import_mapping(wsname)"},{"path":"http://humus.rocks/NASIStools/reference/read_import_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Worksheet Import Mapping XML\n\nReads a worksheet import map, identifies physical column names and associated columns for worksheets. — read_import_mapping","text":"wsname Worksheet Name","code":""},{"path":"http://humus.rocks/NASIStools/reference/read_import_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Worksheet Import Mapping XML\n\nReads a worksheet import map, identifies physical column names and associated columns for worksheets. — read_import_mapping","text":"data.frame","code":""},{"path":"http://humus.rocks/NASIStools/reference/remapColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Map columns of a SoilProfileCollection or data.frame to a custom schema — remapColumns","title":"Map columns of a SoilProfileCollection or data.frame to a custom schema — remapColumns","text":"Map columns SoilProfileCollection data.frame custom schema","code":""},{"path":"http://humus.rocks/NASIStools/reference/remapColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map columns of a SoilProfileCollection or data.frame to a custom schema — remapColumns","text":"","code":"remapColumns(x, .map)"},{"path":"http://humus.rocks/NASIStools/reference/remapColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map columns of a SoilProfileCollection or data.frame to a custom schema — remapColumns","text":"x SoilProfileCollection horizon-level data.frame .map named, nested list sub-list defines columns associated new table terms existing columns x. basic format .map argument follows: list(new_table_name = list(new_column_name = 'old_column_name'))","code":""},{"path":"http://humus.rocks/NASIStools/reference/remapColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map columns of a SoilProfileCollection or data.frame to a custom schema — remapColumns","text":"named list data.frame objects (equal length .map) containing data x \"remapped\" schema specified .map.","code":""},{"path":"http://humus.rocks/NASIStools/reference/renormalizeColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"\"Unflattening\" selected columns table rows","code":""},{"path":"http://humus.rocks/NASIStools/reference/renormalizeColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"renormalizeColumns(x, .map, .keys)"},{"path":"http://humus.rocks/NASIStools/reference/renormalizeColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"x data.frame .map format list(foreign_key = list(primary_key = vector_of_column_defining_unique_record)) .keys formatlist(new_column_name = vector_of_old_column_names)","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009009","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9009","title":"NASIStools 0.0.0.9009","text":"Added read_import_mapping() create_import_template_from_mapping()","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009008","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9008","title":"NASIStools 0.0.0.9008","text":"get_NASIS_metadata() get_NASIS_column_metadata() moved {soilDB}.","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009007","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9007","title":"NASIStools 0.0.0.9007","text":"createSSURGO() refactored, extended moved {soilDB}. See also soilDB::downloadSSURGO().","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009006","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9006","title":"NASIStools 0.0.0.9006","text":"Added get_NASIS_metadata(): function accessing NASIS metadata domain choice-level granularity Added lookupTexture()/lookupTextureModifier(): helper functions handling texture classes using NASIS metadata tool generates flat file NASIS table schema Pedon object given list input tables. template based imports PedonPC data NASIS. Added remapColumns() renormalizeColumns(): two functions useful converting schemas using SoilProfileCollection data.frame objects intermediate","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009005","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9005","title":"NASIStools 0.0.0.9005","text":"Added get_correlation_info() tool getting legend, mapunit, datamapunit component information correlated additional mapunits, given related ID. Added NEWS.md file track changes package.","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009004","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9004","title":"NASIStools 0.0.0.9004","text":"Updates create_import_template() tool NASIS import XLSX file creation","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009003","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9003","title":"NASIStools 0.0.0.9003","text":"Add ecositeid_to_name() helper function converting ecositeid ecositenm","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009002","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9002","title":"NASIStools 0.0.0.9002","text":"Generic NASIS import template creator create_import_template() ESD Ecosites ESD Notes templates via create_ESD_ecosites_import(), create_note_from_ESD_ecosites(), create_ESD_notes_import()","code":""},{"path":"http://humus.rocks/NASIStools/news/index.html","id":"nasistools-0009001","dir":"Changelog","previous_headings":"","what":"NASIStools 0.0.0.9001","title":"NASIStools 0.0.0.9001","text":"Code converters NASIS / Web Soil Survey SSURGO Export tools Interpretations “reasons” tools","code":""}]
